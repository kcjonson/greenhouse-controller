version: '3.1'
volumes:
  shared:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: "${PWD}/shared"
  postgres-data:
services:
  api:
    build: ./packages/api
    command: npm run start
    restart: always
    volumes:
      - ./packages/api:/usr/packages/api
      - shared:/usr/packages/api/src/shared
      - /usr/packages/api/node_modules
    depends_on:
      - postgres
      - redis
    environment:
      PORT: 3001
      NODE_ENV: 'production'
      DATABASE_URL: postgres://${POSTGRES_USER:-greenhouse}:${POSTGRES_PASSWORD:-password}@postgres/${POSTGRES_DB:-greenhouse}
      REDIS_HOST: redis
      REDIS_PORT: 6379
  web:
    build: ./packages/web
    command: npm run start
    restart: always
    volumes:
      - ./packages/web:/usr/packages/web
      - shared:/usr/packages/web/src/shared
      - /usr/packages/web/node_modules
    depends_on:
      - redis
    environment:
      PORT: 3000
      NODE_ENV: 'production'
      REDIS_HOST: redis
      REDIS_PORT: 6379
  postgres:
    image: postgres
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-greenhouse}
      POSTGRES_USER: ${POSTGRES_USER:-greenhouse}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
  redis:
    image: redis
    restart: always
  proxy:
    image: nginx:alpine
    restart: always
    ports:
    - "${PROXY_PORT:-8090}:8090"
    volumes:
      - ./site.conf:/etc/nginx/conf.d/site.conf
    depends_on:
      - api
      - web